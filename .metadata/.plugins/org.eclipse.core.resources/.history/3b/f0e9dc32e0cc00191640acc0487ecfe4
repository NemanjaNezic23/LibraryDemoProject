package com.demo.project.services;

import java.sql.Date;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.UUID;

import javax.faces.bean.ApplicationScoped;
import javax.faces.bean.ManagedBean;

import com.demo.project.model.BookModel;

@ManagedBean(name = "bookService")
@ApplicationScoped
public class BookService {

	private final static HashMap<String, String> authors;
	private final static List<String> genres;

	static {
		authors = new HashMap<>();
		authors.add("George R.R. Martin", "Song of Ice and Fire");
		authors.add("A.G. Riddle", "Departure");
		authors.add("David Baldacci", "Memory Man");
		authors.add("Stephen King", "The Shining");
		authors.add("H.P. Lovecraft", "Necronomicon");
		authors.add("Clive Barker", "Imajica");
		authors.add("Jules Verne", "Around the world in 80 days");
		authors.add("Arthur C. Clarke", "Childhood's End");
		authors.add("John Cheever", "The world of apples");
		authors.add("James Baldwin", "The evidence of things not seen");
		authors.add("Anton Chekhov", "The Lady with the Dog");
		authors.add("Ginger Strand", "Flight");
		authors.add("Robert Graysmith");

		genres = new ArrayList<>();
		genres.add("Action and adventure");
		genres.add("Horror");
		genres.add("Science fiction");
		genres.add("Short story");
		genres.add("Science");
		genres.add("True crime");

	}

	public List<BookModel> createBooks(int numberOfBooks) {
		List<BookModel> listOfBooks = new ArrayList<>();
		for (int i = 0; i <= numberOfBooks; i++) {
			listOfBooks.add(new BookModel(String.valueOf(i), getAuthor(i), getRandomGenre(), getTitle(i), getCurrentDate()),
					getCurrentDate(), getRandomRentState()));
		}
		return listOfBooks;
	}

	private Strint getAuthor(int index) {
		
	}
	
	private String getRandomId() {
		return UUID.randomUUID().toString().substring(0,8);
	}

	private String getRandomAuthor() {
		return authors.get(((int) (Math.random() * 10)));
	}

	private String getRandomGenre() {
		return genres.get((int) (Math.random() * 6));
	}

	private boolean getRandomRentState() {
		return (Math.random() > 0.5) ? true : false;
	}

	private Date getCurrentDate() {
		return new Date(System.currentTimeMillis());
	}
}
